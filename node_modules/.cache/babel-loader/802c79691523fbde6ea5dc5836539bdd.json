{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saksh\\\\OneDrive\\\\Desktop\\\\task\\\\Chapter5\\\\src\\\\pages\\\\ListDetail.js\",\n    _s = $RefreshSig$();\n\n// import { useContext ,useEffect } from 'react';\n// import styled from 'styled-components';\n// import { useNavigate, useParams } from 'react-router-dom';\n// //import useDataFetching from '../hooks/useDataFetching';\n// import NavBar from '../components/NavBar/NavBar';\n// import ListItem from '../components/ListItem/ListItem';\n// import ListsContext from '../context/ListsContext';\n// import ItemsContext from '../context/ItemsContext';\n// const ListItemWrapper = styled.div`\n//   display: flex;\n//   justify-content: space-between;\n//   flex-direction: column;\n//   margin: 2% 5%;\n// `;\n// function ListDetail() {\n//   let navigate = useNavigate();\n//   const { listId } = useParams();\n//   // const [loading, error, data] = useDataFetching(\n//   //   'https://my-json-server.typicode.com/PacktPublishing/React-Projects-Second-Edition/items/',\n//   // );\n// //   const { loading, error, items: data } = \n// //  useContext(ItemsContext);\n// const { loading, error, items, fetchItems } = \n//  useContext(ItemsContext);\n//  const { list, fetchList } = \n//  useContext(ListsContext);\n//   // const [items, setItems] = useState([]);\n//   // useEffect(() => {\n//   //   data &&\n//   //     listId &&\n//   //     setItems(data.filter((item) => item.listId === parseInt(listId)));\n//   // }, [data, listId]);\n//   useEffect(() => {\n//     listId && !items.length && fetchItems(listId);\n//      }, [fetchItems, items, listId]);\n//      useEffect(() => {\n//       listId && fetchList(listId);\n//        }, [fetchList, listId]);\n//   return (\n//     <>\n//       {navigate && (\n//         <NavBar\n//           goBack={() => navigate(-1)}\n//           openForm={() => navigate(`/list/${listId}//new`)}\n//           title={list && list.title}\n//         />\n//       )}\n//       <ListItemWrapper>\n//         {loading || error ? (\n//           <span>{error || 'Loading...'}</span>\n//         ) : (\n//           items.map((item) => <ListItem key={item.id} data={item} />)\n//         )}\n//       </ListItemWrapper>\n//     </>\n//   );\n// }\n// export default ListDetail;\nimport { useEffect, useContext } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport ItemsContext from '../context/ItemsContext';\nimport ListsContext from '../context/ListsContext';\nimport NavBar from '../components/NavBar/NavBar';\nimport ListItem from '../components/ListItem/ListItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ListItemWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  margin: 2% 5%;\n`;\n_c = ListItemWrapper;\n\nfunction ListDetail() {\n  _s();\n\n  let navigate = useNavigate();\n  const {\n    listId\n  } = useParams();\n  const {\n    loading,\n    error,\n    items,\n    fetchItems\n  } = useContext(ItemsContext);\n  const {\n    list,\n    fetchList\n  } = useContext(ListsContext);\n  useEffect(() => {\n    listId && !items.length && fetchItems(listId);\n  }, [fetchItems, items, listId]);\n  useEffect(() => {\n    listId && fetchList(listId);\n  }, [fetchList, listId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [navigate && /*#__PURE__*/_jsxDEV(NavBar, {\n      goBack: () => navigate(-1),\n      openForm: () => navigate(`/list/${listId}/new`),\n      title: list && list.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ListItemWrapper, {\n      children: loading || error ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: error || 'Loading...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this) : items.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n        data: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 31\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ListDetail, \"Yq+W7IOCpxcPezUzlLSijxun5Vg=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c2 = ListDetail;\nexport default ListDetail;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ListItemWrapper\");\n$RefreshReg$(_c2, \"ListDetail\");","map":{"version":3,"sources":["C:/Users/saksh/OneDrive/Desktop/task/Chapter5/src/pages/ListDetail.js"],"names":["useEffect","useContext","styled","useNavigate","useParams","ItemsContext","ListsContext","NavBar","ListItem","ListItemWrapper","div","ListDetail","navigate","listId","loading","error","items","fetchItems","list","fetchList","length","title","map","item","id"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA,SAASA,SAAT,EAAoBC,UAApB,QAAsC,OAAtC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,QAAP,MAAqB,iCAArB;;;AAEA,MAAMC,eAAe,GAAGP,MAAM,CAACQ,GAAI;AACnC;AACA;AACA;AACA;AACA,CALA;KAAMD,e;;AAON,SAASE,UAAT,GAAsB;AAAA;;AACpB,MAAIC,QAAQ,GAAGT,WAAW,EAA1B;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAaT,SAAS,EAA5B;AAEA,QAAM;AAAEU,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,KAAlB;AAAyBC,IAAAA;AAAzB,MAAwChB,UAAU,CAACI,YAAD,CAAxD;AACA,QAAM;AAAEa,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAsBlB,UAAU,CAACK,YAAD,CAAtC;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,MAAM,IAAI,CAACG,KAAK,CAACI,MAAjB,IAA2BH,UAAU,CAACJ,MAAD,CAArC;AACD,GAFQ,EAEN,CAACI,UAAD,EAAaD,KAAb,EAAoBH,MAApB,CAFM,CAAT;AAIAb,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,MAAM,IAAIM,SAAS,CAACN,MAAD,CAAnB;AACD,GAFQ,EAEN,CAACM,SAAD,EAAYN,MAAZ,CAFM,CAAT;AAIA,sBACE;AAAA,eACGD,QAAQ,iBACP,QAAC,MAAD;AACE,MAAA,MAAM,EAAE,MAAMA,QAAQ,CAAC,CAAC,CAAF,CADxB;AAEE,MAAA,QAAQ,EAAE,MAAMA,QAAQ,CAAE,SAAQC,MAAO,MAAjB,CAF1B;AAGE,MAAA,KAAK,EAAEK,IAAI,IAAIA,IAAI,CAACG;AAHtB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQE,QAAC,eAAD;AAAA,gBACGP,OAAO,IAAIC,KAAX,gBACC;AAAA,kBAAOA,KAAK,IAAI;AAAhB;AAAA;AAAA;AAAA;AAAA,cADD,GAGCC,KAAK,CAACM,GAAN,CAAWC,IAAD,iBAAU,QAAC,QAAD;AAAwB,QAAA,IAAI,EAAEA;AAA9B,SAAeA,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,cAApB;AAJJ;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAkBD;;GAjCQb,U;UACQR,W,EACIC,S;;;MAFZO,U;AAmCT,eAAeA,UAAf","sourcesContent":["// import { useContext ,useEffect } from 'react';\n// import styled from 'styled-components';\n// import { useNavigate, useParams } from 'react-router-dom';\n// //import useDataFetching from '../hooks/useDataFetching';\n// import NavBar from '../components/NavBar/NavBar';\n// import ListItem from '../components/ListItem/ListItem';\n// import ListsContext from '../context/ListsContext';\n// import ItemsContext from '../context/ItemsContext';\n// const ListItemWrapper = styled.div`\n//   display: flex;\n//   justify-content: space-between;\n//   flex-direction: column;\n//   margin: 2% 5%;\n// `;\n\n// function ListDetail() {\n\n//   let navigate = useNavigate();\n//   const { listId } = useParams();\n\n//   // const [loading, error, data] = useDataFetching(\n//   //   'https://my-json-server.typicode.com/PacktPublishing/React-Projects-Second-Edition/items/',\n//   // );\n\n// //   const { loading, error, items: data } = \n// //  useContext(ItemsContext);\n// const { loading, error, items, fetchItems } = \n//  useContext(ItemsContext);\n//  const { list, fetchList } = \n//  useContext(ListsContext);\n//   // const [items, setItems] = useState([]);\n\n//   // useEffect(() => {\n//   //   data &&\n//   //     listId &&\n//   //     setItems(data.filter((item) => item.listId === parseInt(listId)));\n//   // }, [data, listId]);\n//   useEffect(() => {\n//     listId && !items.length && fetchItems(listId);\n//      }, [fetchItems, items, listId]);\n\n\n//      useEffect(() => {\n//       listId && fetchList(listId);\n//        }, [fetchList, listId]);\n//   return (\n//     <>\n//       {navigate && (\n//         <NavBar\n//           goBack={() => navigate(-1)}\n//           openForm={() => navigate(`/list/${listId}//new`)}\n//           title={list && list.title}\n//         />\n//       )}\n//       <ListItemWrapper>\n//         {loading || error ? (\n//           <span>{error || 'Loading...'}</span>\n//         ) : (\n//           items.map((item) => <ListItem key={item.id} data={item} />)\n//         )}\n//       </ListItemWrapper>\n//     </>\n//   );\n// }\n\n// export default ListDetail;\n\n\nimport { useEffect, useContext } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport ItemsContext from '../context/ItemsContext';\nimport ListsContext from '../context/ListsContext';\nimport NavBar from '../components/NavBar/NavBar';\nimport ListItem from '../components/ListItem/ListItem';\n\nconst ListItemWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  margin: 2% 5%;\n`;\n\nfunction ListDetail() {\n  let navigate = useNavigate();\n  const { listId } = useParams();\n\n  const { loading, error, items, fetchItems } = useContext(ItemsContext);\n  const { list, fetchList } = useContext(ListsContext);\n\n  useEffect(() => {\n    listId && !items.length && fetchItems(listId);\n  }, [fetchItems, items, listId]);\n\n  useEffect(() => {\n    listId && fetchList(listId);\n  }, [fetchList, listId]);\n\n  return (\n    <>\n      {navigate && (\n        <NavBar\n          goBack={() => navigate(-1)}\n          openForm={() => navigate(`/list/${listId}/new`)}\n          title={list && list.title}\n        />\n      )}\n      <ListItemWrapper>\n        {loading || error ? (\n          <span>{error || 'Loading...'}</span>\n        ) : (\n          items.map((item) => <ListItem key={item.id} data={item} />)\n        )}\n      </ListItemWrapper>\n    </>\n  );\n}\n\nexport default ListDetail;\n"]},"metadata":{},"sourceType":"module"}